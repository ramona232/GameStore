@page "/editgame"
@inject NavigationManager NavigationManager

<h1 class="mt-5 text-light">EditGame</h1>
@if (genres is null)
{
  <p><em>Loading...</em></p>
}

else{
<div class=" row ">
  <div class="col-md-6 bg-dark opacity-75"> 
     <EditForm Model="@game" FormName="editGame" OnSubmit="HandleSubmit" class="text-light p-4">
    <div class="mb-3">
      <label for="name" class="form-label">Name:</label>
      <InputText id="name" @bind-Value="game.Name" class="form-control" />
    </div>
    <div class="mb-3">
      <label for="genre" class="form-label">Genre:</label>
      <InputSelect id="genre" @bind-Value="game.GenreId" class="form-select">
      <option value="">Select a genre</option>
      @foreach (var genre in genres){
            <option value="@genre.Id">@genre.Name</option>
      }
      </InputSelect>
    </div>
    <div class="mb-3">
      <label for="price" class="form-label">Price:</label>
      <InputNumber id="Price" @bind-Value="game.Price" class="form-control" />
    </div>
    <div class="mb-3">
      <label for="releaseDate" class="form-label">Release Date:</label>
      <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control" />
    </div>
    <button type="submit" class="btn btn-success">Save</button>
    <NavLink role="button" class="btn btn-danger" href="/">Cancel</NavLink>
  </EditForm>
  </div>
</div>
}




@code {

  [SupplyParameterFromForm]
  private GameDetails game { get; set; } = new()
    {
      Name = string.Empty,
      ReleaseDate = DateOnly.FromDateTime(DateTime.UtcNow)
    };

    private GenresClient genresClient = new();
    private GameClient gamesClient = new();

    private Genre[]? genres;

    protected override void OnInitialized(){
      genres = genresClient.GetGenres();
    }

    private void HandleSubmit(){
      gamesClient.AddGame(game);
      NavigationManager.NavigateTo("/");
    }
}